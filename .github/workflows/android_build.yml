name: Android CI Build for Android 4.0.3

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    # Крок 1: Встановлюємо JDK 17 для запуску sdkmanager
    - name: Set up JDK 17 for SDK Manager
      uses: actions/setup-java@v4
      id: setup_jdk_17 # Додаємо ID, щоб посилатися на цей JDK
      with:
        java-version: '17' # JDK 17 потрібен для sdkmanager
        distribution: 'temurin'

    # Крок 2: Налаштовуємо Android SDK, використовуючи JDK 17
    - name: Set up Android SDK
      uses: android-actions/setup-android@v3
      with:
        packages: |
          platform-tools
          platforms;android-15
          build-tools;34.0.0
          cmdline-tools;latest
      # Вказуємо, щоб цей крок використовував JDK 17
      env:
        JAVA_HOME: ${{ steps.setup_jdk_17.outputs.java-home }}

    # Крок 3: Встановлюємо JDK 8 для компіляції Gradle
    - name: Set up JDK 8 for Gradle Build
      uses: actions/setup-java@v4
      id: setup_jdk_8 # Додаємо ID для JDK 8
      with:
        java-version: '8' # JDK 8 потрібен для вашого Android проекту (minSdkVersion 15)
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build Debug APK # Запускаємо Gradle з JDK 8
      run: ./gradlew assembleDebug
      env:
        JAVA_HOME: ${{ steps.setup_jdk_8.outputs.java-home }} # Переконайтеся, що Gradle використовує JDK 8

    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug-apk
        path: app/build/outputs/apk/debug/app-debug.apk
